name: Backup Fork and Sync

on:
  schedule:
    # 台灣時間週一 00:00 = UTC 16:00 星期日
    - cron: '0 16 * * 0'
  workflow_dispatch:

env:
  # 若 repo/orga 已設定 UPSTREAM_REPO、MAIN_BRANCH 變量 → 用它；否則用右邊 default
  UPSTREAM_REPO: ${{ vars.UPSTREAM_REPO || 'https://github.com/Zackriya-Solutions/meeting-minutes.git' }}
  MAIN_BRANCH:   ${{ vars.MAIN_BRANCH   || 'main' }}

jobs:
  backup-and-sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write   # 讓 GITHUB_TOKEN 能 push，不用額外 PAT

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ github.token }}   # ← 官方建議寫法

    - name: Config git identity
      run: |
        git config --global user.name  'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

    # === 產生 pre-sync tag ===
    - name: Tag before sync
      run: |
        ts=$(date +'%Y%m%d%H%M%S')
        git tag -a "pre-sync-$ts" -m "Pre‑sync $ts"
        git push --tags --force-with-lease

    # === 追蹤 upstream ===
    - name: Add & fetch upstream
      run: |
        git remote add upstream "$UPSTREAM_REPO" 2>/dev/null || \
        git remote set-url upstream "$UPSTREAM_REPO"
        git fetch upstream --prune --tags

    # === 同步 tag（保留 pre/post）===
    - name: Sync tags
      run: |
        keep_regex='^(pre|post)-sync-'
        # 刪本地非 keep tag
        git tag | grep -vE "$keep_regex" | xargs -r git tag -d
        # 把 upstream tag 拉回來
        git fetch upstream --tags
        # 推到 origin，只推「新增／更新」的，不強推全部
        git push origin --tags

    # === 同步分支 ===
    - name: Sync branches
      run: |
        for branch in $(git for-each-ref --format='%(refname:short)' refs/remotes/origin | grep -v '^origin/HEAD$' | sed 's|^origin/||'); do
          echo "=== $branch ==="
          if git ls-remote --exit-code --heads upstream "$branch" >/dev/null; then
            git switch -C "$branch" "origin/$branch"
            git reset --hard "upstream/$branch"
            git push -u origin "$branch"
          else
            echo "  ↳ upstream 無此分支，跳過"
          fi
        done

    # === 產生 post-sync tag ===
    - name: Tag after sync
      run: |
        ts=$(date +'%Y%m%d%H%M%S')
        git tag -a "post-sync-$ts" -m "Post‑sync $ts"
        git push --tags

    # === 報告 ===
    - name: Generate report
      if: always()
      run: |
        echo '# Sync Report'                 >  sync_report.md
        echo                                   >> sync_report.md
        echo '## Tags (local)'                >> sync_report.md
        git tag                               >> sync_report.md
        echo                                   >> sync_report.md
        echo '## Branches (origin vs upstream)' >> sync_report.md
        for br in $(git branch -r --format='%(refname:short)' | grep '^origin/' | sed 's|origin/||'); do
          printf '\n### %s\n' "$br"           >> sync_report.md
          git log --oneline "origin/$br..upstream/$br" >> sync_report.md || echo '(no diff)' >> sync_report.md
        done

    - name: Upload report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: sync-report
        path: sync_report.md
